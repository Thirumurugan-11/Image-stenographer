import streamlit as st
import cv2 
import numpy as np
import pandas as pd
import encode as en
import decode as dc
import time as t
from datetime import datetime
import trans_dect as td
import os,io
import os,io
from google.cloud import vision_v1
from google.cloud.vision_v1 import types
from googletrans import Translator


sr = None
st.header("Image StenoGrapher")
uploaded_file = st.file_uploader("Choose a image (PNG):)  ")
sbop1 = st.sidebar.button("Encrypt ")
sbop2 = st.sidebar.button("Decrypt ")
sbop3 = st.sidebar.button("Encrypt (Detect Text from image)")
pic_text = st.sidebar.file_uploader("Upload the Image text file")
#st.write("Enter your DATA to encrypt : ")

if sbop1:
    st.write("Enter your DATA to encrypt : ")
    scdata = st.text_input("Enter the NASA secrect brooooo ",key="data")

    input_image = f"{uploaded_file.name}" # Black screen to hide data
    output_image = "encoded_image.png" # Image generated by encoding the details
    secret_data = scdata 
    #video = "video.mp4" # Uploaded content (movie)

    # encode the data into the image
    if not secret_data:
        st.warning("Enter the secret message")
    encoded_image = en.encode(input_image,secret_data)
    cv2.imwrite(output_image, encoded_image)
    t.sleep(10)
    st.warning('Encoded Broo ', icon="✅")

if sbop3:
    #pic_text = st.sidebar.file_uploader("Upload the Image text file")
    #secret_data = None

        os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = "K:\Thiru-12\GoogleCloudAccess\pairathon-592821c814b4.json"
        request = vision_v1.GetProductSetRequest(name="name")
        client = vision_v1.ImageAnnotatorClient()
        
        f=f"{pic_text.name}"
        with io.open(f,'rb') as image_file:
            content = image_file.read()


        image =  vision_v1.types.Image(content=content)
        response = client.document_text_detection(image= image)
        docText = response.full_text_annotation.text

        translator = Translator()

        #print(docText)
        #st.write("Detected Word :",docText)
        res=translator.translate(docText)
        #st.write("Source Language:",L[res.src])
        #st.write("Translated word :",res.text)


        #secret_data = td.trans_code(pic_text)
        print(res.text)
        sr= res.src
        print(res.src)
        input_image = f"{uploaded_file.name}" # Black screen to hide data
        output_image = "encoded_image.png" # Image generated by encoding the details
        secret_data = res.text
        #video = "video.mp4" # Uploaded content (movie)

        # encode the data into the image
        encoded_image = en.encode(input_image,secret_data)
        cv2.imwrite(output_image, encoded_image)
        t.sleep(10)
        st.warning('Encoded Broo ', icon="✅")




if sbop2:
    start=datetime.now()
    #st.write("Decrypting your data ")
    with st.spinner('Decrypting your data....'):
        t.sleep(5)
    st.write("Decrypting your data Under Progress .... ")
    outtext = f"{uploaded_file.name}"
    dctext = dc.decode(outtext)
    #st.spinner(text="Decrypting your data.....")
    print("[+] Decoded text",dctext.rstrip('\x00'))
    #st.write("working")
    fi = open("Decrpyted Text.txt","w")
    #fc = open("DC-original.txt",'w')
    #translator = Translator()
    #trn = translator.translate(dctext,dest=sr)
    fi.write(dctext)
    #fc.write(trn)
    st.write("DECRPYTED SUCCESSFULLY")











